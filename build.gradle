buildscript {
  ext {
    kotlinVersion = '1.3.72'
    vertxVersion = '3.9.1'
    jUnitVersion = '5.6.0'
    daggerVersion = '2.28.1'
    jacksonVersion = '2.11.1'
    javaxElApiVersion = '2.2.4'
    javaxElVersion = '2.2.4'
    jaxbApiVersion = '2.3.0'
    jaxActivationVersion = '1.1'
    jaxGlassfishVersion = '2.3.0'
    restAssuredVersion = '4.3.0'
    spekVersion = "2.0.9"
    kluentVersion = "1.35"
    mockkVersion = "1.10.0"
  }

  repositories {
    jcenter {
      content {
        // just allow to include kotlinx projects
        // detekt needs 'kotlinx-html' for the html report
        includeGroup "org.jetbrains.kotlinx"
      }
    }
  }

  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:6.0.0'
  }
}

plugins {
  id "org.jetbrains.kotlin.jvm" version "1.3.72"
  id "org.jetbrains.kotlin.kapt" version "1.3.72"
  id "io.gitlab.arturbosch.detekt" version "1.10.0"
  id 'application'
  id 'com.github.johnrengelman.shadow' version '6.0.0'
}

group = 'com.example'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
  jcenter()
}

application {
  mainClassName = 'com.example.api.Application'
}

//def mainVerticleName = 'com.vertx.mongo.MainVerticle'
//def watchForChange = 'src/**/*'
//def doOnChange = './gradlew classes'



subprojects {
  apply plugin: "idea"

  apply plugin: 'org.jetbrains.kotlin.jvm'
  apply plugin: 'org.jetbrains.kotlin.kapt'

  apply plugin: "io.gitlab.arturbosch.detekt"
  apply plugin: 'com.github.johnrengelman.shadow'

  group 'com.example'

  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }

  compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_13
    targetCompatibility = JavaVersion.VERSION_13

    kotlinOptions {
      jvmTarget = "13"
      apiVersion = "1.3"
      languageVersion = "1.3"
      allWarningsAsErrors = true
    }
  }

  compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_13
    targetCompatibility = JavaVersion.VERSION_13

    kotlinOptions {
      jvmTarget = "13"
      apiVersion = "1.3"
      languageVersion = "1.3"
      allWarningsAsErrors = true
    }
  }

//  detekt {
//    version = "1.0.0.RC6-3"
//    profile("main") {
//      input = "$projectDir/src/main/kotlin"
//      config = "$rootDir/detekt.yml"
//      filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
//      debug = false
//    }
//  }

  detekt {
    toolVersion = "1.10.0"
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$rootDir/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$rootDir/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
      html.enabled = true // observe findings in your browser with structure and code snippets
      xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
      txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
    }
  }


// Groovy dsl
  tasks.detekt.jvmTarget = "13"


  test {
//    finalizedBy detekt

    useJUnitPlatform {
      includeEngines 'spek', 'junit-jupiter'
    }

    testLogging {
      exceptionFormat "full"
      showCauses true
      showExceptions true
      showStackTraces true
      showStandardStreams true
      events = ["passed", "skipped", "failed", "standardError", "standardOut"]
    }

  }

}


//run {
//  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
//}

